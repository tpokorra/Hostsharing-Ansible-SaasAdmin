---
- hosts: saasadmin
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory

  ##################################
  ## install SaasAdmin
  ##################################
  - name: Check for git working tree
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: /home/pacs/{{pac}}/users/{{user}}/saasadmin
    register: workingtree
  - name: get saasadmin repo
    become: yes
    become_user: "{{pac}}-{{user}}"
    git:
      repo: https://github.com/solidcharity/saasadmin.git
      dest: /home/pacs/{{pac}}/users/{{user}}/saasadmin
    when: not workingtree.stat.exists
  - name: make sure we require psycopg2 for postgresql
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/saasadmin/requirements.txt
      regexp: 'psycopg2'
      line: psycopg2

  ##################################
  ## configuration
  ##################################
  - name: upload configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/settings_local.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/saasadmin/saasadmin/settings_local.py"

  - name: upload restart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/restart.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/restart.sh"
      mode: '0744'

  - name: upload sql script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/sql.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/sql.sh"
      mode: '0744'

  - name: "Initiate virtualenv and install packages and install database with superuser"
    become: yes
    become_user: "{{pac}}-{{user}}"
    make:
      chdir: /home/pacs/{{pac}}/users/{{user}}/saasadmin
      target: quickstart_without_demodb

  - name: collect static contents
    become: yes
    become_user: "{{pac}}-{{user}}"
    make:
      chdir: /home/pacs/{{pac}}/users/{{user}}/saasadmin
      target: collectstatic

  ########################
  ## setup the apache site
  ########################
  - name: drop htdocs-ssl/.htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess"
       state: absent
  - name: create symbolic link for static
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/saasadmin/static"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/static"
      state: link
  - name: drop subs-ssl/www/index.html
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/subs-ssl/www/index.html"
       state: absent
  - name: create symbolic link for www/static
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/saasadmin/static"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/subs-ssl/www/static"
      state: link
  - name: upload .htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess"
  - name: upload passenger wsgi file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/passenger_wsgi.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl/passenger_wsgi.py"
